import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command

#—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–∫–∞–∑
order = []

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
API_TOKEN = '7690934306:AAE1M_trc0I0lTs2LrjnQrsF9DKpiySuT50'

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∏
onStartMenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–∏—Ä–æ–≥–∏ üëã", callback_data="pies")],
    [InlineKeyboardButton(text="–°—É—à–∏ üëã", callback_data="sushi")],
    [InlineKeyboardButton(text="–ü–∏—Ü—Ü–∞ üëã", callback_data="pizza")]
])

onPiesMenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–°—ã—Ç–Ω—ã–µ üëã", callback_data="satisfying")],
    [InlineKeyboardButton(text="–°–ª–∞–¥–∫–∏–µ üëã", callback_data="sweet")]
])

onSatisfyingPies = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–° –º—è—Å–æ–º üëã", callback_data="pie_meat")],
    [InlineKeyboardButton(text="–° –∫—Ä–æ–ª–∏–∫–æ–º", callback_data="pie_rabbit")],
    [InlineKeyboardButton(text="–° –∫–∞–ø—É—Å—Ç–æ–π", callback_data="pie_cabbage")],
    [InlineKeyboardButton(text="–° —Ä—ã–±–æ–π", callback_data="pie_fish")],
    [InlineKeyboardButton(text="–° –∫–∞—Ä—Ç–æ—à–∫–æ–π", callback_data="pie_potato")]
])

onSweetPies = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–° —Ç–≤–æ—Ä–æ–≥–æ–º", callback_data="pie_curd")],
    [InlineKeyboardButton(text="–° —è–≥–æ–¥–æ–π", callback_data="pie_berry")],
    [InlineKeyboardButton(text="–° –ª–∏–º–æ–Ω–æ–º", callback_data="pie_lemon")],
    [InlineKeyboardButton(text="–° —è–±–ª–æ–∫–∞–º–∏", callback_data="pie_apple")]
])

onPizzaMenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ üëã", callback_data="margarita")],
    [InlineKeyboardButton(text="–ü–µ–ø–µ—Ä–æ–Ω–∏", callback_data="peperonni")],
    [InlineKeyboardButton(text="4 –°–µ–∑–æ–Ω–∞", callback_data="4sezon")],
    [InlineKeyboardButton(text="–ì–∞–≤–∞–π—Å–∫–∞—è", callback_data="hawaiy")]
])

onNamePizza = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ú–∞–ª–µ–Ω—å–∫–∞—è üëã", callback_data="small")],
    [InlineKeyboardButton(text="–°—Ä–µ–¥–Ω–∏—è—è üëã", callback_data="middle")],
    [InlineKeyboardButton(text="–ë–æ–ª—å—à–∞—è üëã", callback_data="big")]
])

onSushiMenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–†–æ–ª–ª—ã üëã", callback_data="roll")],
    [InlineKeyboardButton(text="–°—É–ø—ã üëã", callback_data="soup")],
    [InlineKeyboardButton(text="–ö–æ—Ä–æ–±–æ—á–∫–∏ üëã", callback_data="box")]
])

onRollSushi = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è", callback_data="filadelfiya")],
    [InlineKeyboardButton(text="–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è", callback_data="californiya")],
    [InlineKeyboardButton(text="–° –æ–≥—É—Ä—Ü–æ–º", callback_data="cucumber")]
])

onSoupSushi = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ú–∏—Å–æ", callback_data="miso")],
    [InlineKeyboardButton(text="–ö–∏–º—á–∏", callback_data="kimchi")],
    [InlineKeyboardButton(text="–ö—É—Ä–∏–Ω—ã–π", callback_data="chicken")]
])

onBoxSushi = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", callback_data="classic")],
    [InlineKeyboardButton(text="–° —Ä–∏—Å–æ–º", callback_data="with_ris")],
    [InlineKeyboardButton(text="–í–æ–∫ –¢–æ–º –Ø–Ω", callback_data="box_tom_yan")]
])

onOrderMenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="make_order")],
    [InlineKeyboardButton(text="–ó–∞–Ω–æ–≤–æ", callback_data="cancel_order")]
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–°–∫–∞—Ç–µ—Ä—Ç—å-–°–∞–º–æ–±—Ä–∞–Ω–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è! –ß—Ç–æ, –∏–∑–≤–æ–ª–∏—Ç–µ?!", reply_markup=onStartMenu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /bla
"""@dp.message(Command("bla"))
async def start_handler(message: types.Message):
    await message.answer("–°–∫–∞—Ç–µ—Ä—Ç—å-–°–∞–º–æ–±—Ä–∞–Ω–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è! –ß—Ç–æ, –∏–∑–≤–æ–ª–∏—Ç–µ?!", reply_markup=keyboard)"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def callback_handler(callback: types.CallbackQuery):
    data = callback.data

    if data == "pies":
        await callback.message.delete()
        await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∏—Ä–æ–≥–∏, —Ç–µ–ø–µ—Ä—å —á—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ:üëã", reply_markup=onPiesMenu)
        order.append("–ü–∏—Ä–æ–≥")
    elif data == "sushi":
        #await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.delete()
        await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—É—à–∏, —Ç–µ–ø–µ—Ä—å —á—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ:üëã", reply_markup=onSushiMenu)
        order.append("–°—É—à–∏")
    elif data == "pizza":
        await callback.message.delete()
        await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∏—Ü—Ü—É, —Ç–µ–ø–µ—Ä—å —á—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ:üëã", reply_markup=onPizzaMenu)
        order.append("–ü–∏—Ü—Ü–∞")
    elif data == "small":
        await callback.message.delete()
        order.append("–º–∞–ª–µ–Ω—å–∫–∞—è")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "middle":
        await callback.message.delete()
        order.append("—Å—Ä–µ–¥–Ω—è—è")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "big":
        await callback.message.delete()
        order.append("–±–æ–ª—å—à–∞—è")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "margarita":
        await callback.message.delete()
        await callback.message.answer("–∞ —Ä–∞–∑–º–µ—Ä:", reply_markup=onNamePizza)
        order.append("–º–∞—Ä–≥–∞—Ä–∏—Ç–∞")
    elif data == "peperonni":
        await callback.message.delete()
        await callback.message.answer("–∞ —Ä–∞–∑–º–µ—Ä:", reply_markup=onNamePizza)
        order.append("–ø–µ–ø–µ—Ä–æ–Ω–∏")
    elif data == "4sezon":
        await callback.message.delete()
        await callback.message.answer("–∞ —Ä–∞–∑–º–µ—Ä:", reply_markup=onNamePizza)
        order.append("4 —Å–µ–∑–æ–Ω–∞")
    elif data == "hawaiy":
        await callback.message.delete()
        await callback.message.answer("–∞ —Ä–∞–∑–º–µ—Ä:", reply_markup=onNamePizza)
        order.append("–ì–∞–≤–∞–π—Å–∫–∞—è")
    elif data == "satisfying":
        await  callback.message.delete()
        await  callback.message.answer("–Ω—É –∫–∞–∫–æ–π –∂–µ –≤—ã–±—Ä–∞—Ç—å:", reply_markup=onSatisfyingPies)
    elif data == "sweet":
        await  callback.message.delete()
        await  callback.message.answer("–Ω—É –∫–∞–∫–æ–π –∂–µ –≤—ã–±—Ä–∞—Ç—å:", reply_markup=onSweetPies)
    elif data == "pie_meat":
        await callback.message.delete()
        order.append("—Å –º—è—Å–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_rabbit":
        await callback.message.delete()
        order.append("—Å –∫—Ä–æ–ª–∏–∫–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_cabbage":
        await callback.message.delete()
        order.append("—Å –∫–∞–ø—É—Å—Ç–æ–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_fish":
        await callback.message.delete()
        order.append("—Å —Ä—ã–±–æ–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_potato":
        await callback.message.delete()
        order.append("—Å –∫–∞—Ä—Ç–æ—à–∫–æ–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_curd":
        await callback.message.delete()
        order.append("—Å —Ç–≤–æ—Ä–æ–≥–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_berry":
        await callback.message.delete()
        order.append("—Å —è–≥–æ–¥–æ–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_lemon":
        await callback.message.delete()
        order.append("—Å –ª–∏–º–æ–Ω–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "pie_apple":
        await callback.message.delete()
        order.append("–° —è–±–ª–æ–∫–∞–º–∏")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "roll":
        await  callback.message.delete()
        await  callback.message.answer("–Ω—É —á—Ç–æ –∂–µ –≤—ã–±—Ä–∞—Ç—å:", reply_markup=onRollSushi)
        order.append("—Ä–æ–ª–ª")
    elif data == "soup":
        await  callback.message.delete()
        await  callback.message.answer("–Ω—É —á—Ç–æ –∂–µ –≤—ã–±—Ä–∞—Ç—å:", reply_markup=onSoupSushi)
        order.append("—Å—É–ø")
    elif data == "box":
        await  callback.message.delete()
        await  callback.message.answer("–Ω—É —á—Ç–æ –∂–µ –≤—ã–±—Ä–∞—Ç—å:", reply_markup=onBoxSushi)
        order.append("–≤–æ–∫")
    elif data == "filadelfiya":
        await callback.message.delete()
        order.append("–∫–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "californiya":
        await callback.message.delete()
        order.append("—Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "cucumber":
        await callback.message.delete()
        order.append("—Å –æ–≥—É—Ä—Ü–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "miso":
        await callback.message.delete()
        order.append("–º–∏—Å–æ")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "kimchi":
        await callback.message.delete()
        order.append("–∫–∏–º—á–∏")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "chicken":
        await callback.message.delete()
        order.append("–∫—É—Ä–∏–Ω—ã–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "classic":
        await callback.message.delete()
        order.append("–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "with_ris":
        await callback.message.delete()
        order.append("—Å —Ä–∏—Å–æ–º")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "box_tom_yan":
        await callback.message.delete()
        order.append("–¢–æ–º –Ø–Ω")
        await callback.message.answer(" ".join(order), reply_markup=onOrderMenu)
    elif data == "make_order":
        await callback.message.delete()
        await callback.message.answer("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú–æ–∂–µ—Ç –µ—â–µ ;)", reply_markup=onStartMenu)
        order.clear()
    elif data == "cancel_order":
        await callback.message.delete()
        order.clear()
        await callback.message.answer("–í—ã–±–µ—Ä—É –¥—Ä—É–≥–æ–µ:", reply_markup=onStartMenu)
    await callback.answer()  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã Telegram –Ω–µ –∫—Ä—É—Ç–∏–ª "—á–∞—Å–∏–∫–∏"

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())